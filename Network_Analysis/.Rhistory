install.packages("Rcpp")
install.packages("RcppArmadillo")
install.packages("devtools")
install.packages("usethis")
install.packages("usethis")
install.packages("ggplot2")
install.packages("rmarkdown")
install.packages("knitr")
RandomForestAnalysis <- read.csv("~/Dropbox/Quimica/Docker/docker-solubility/data_analysis/built_models/random_forest/RandomForestAnalysis.csv")
View(RandomForestAnalysis)
dir <- setwd("~/Dropbox/Quimica/Docker/docker-solubility/data_analysis/built_models/random_forest/")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Dropbox/Quimica/Docker/docker-solubility/data_analysis/built_models/random_forest/")
data(solubility)
install.packages("AppliedPredictiveModeling")
library("AppliedPredictiveModeling")
data("solubility")
View(solTrainX)
View(solTestX)
View(solTestX)
solTrainX
solTrainY
solTestY
logS <- c(solTrainX,solTestY)
View(logS)
solTrainX
logS <- c(solTrainY,solTestY)
logS
exp(0.25)
rm(list = ls())
ptc      <- read.csv("~/Dropbox/Alumnos Faq quimica/ptc/tablas/Ejemplo_PTC.csv",
stringsAsFactors = FALSE)
revistas <- read.csv("~/Dropbox/Alumnos Faq quimica/ptc/tablas/Ejemplo_autores.csv",
stringsAsFactors = FALSE)
#Cada profesor de tiempo completo es un nodo por lo que asignamos su id
nprof  <- nrow(ptc)
npubs  <- nrow(revistas)
ptc$id <- 1:nprof
#Cada departamento es un color HEX
depto     <- unique(ptc$Departamento)
depto_col <- rainbow(length(depto))
#Creamos los nodos profesores
for (i in 1:nprof){
ptc$Color[i] <- depto_col[which(ptc$Departamento[i] == depto)]
pubs <- 0
for (j in 1:npubs){
if (grepl(ptc$Autores[i],gsub(",","", revistas$Autores[j]))){
pubs <- pubs + 1
}
}
if (pubs == 0){pubs <- 3.5} #para que se vea en el plot
ptc$pubs[i] <- pubs
}
#Cambiar los nombres de ptc columnas
colnames(ptc) <- c("name","depto", "gender","email","id","color","pubs")
#Por otro lado analizamos los artÃ­culos para los links recorriendo para cada
#PTC las publicaciones
links <- c()
for (i in 1:(nprof-1)){
print(i)
for (j in (i+1):nprof){
colabs <- 0
for (k in 1:npubs){
#Si ambos publicaron juntos
if (grepl(ptc$name[i],gsub(",","", revistas$Autores[k])) &
grepl(ptc$name[j],gsub(",","", revistas$Autores[k]))){
colabs <- colabs + 1
}
}
if (colabs > 0){
links <- rbind(links, c(ptc$id[i], ptc$id[j], ptc$name[i], ptc$name[j], colabs))
}
}
}
colnames(links) <- c("source","target","sourcename","targetname","colabs")
library(jsonlite)
ptc_json <- toJSON(ptc)
link_json <- toJSON(links)
ptc_json
json <- paste0('{"nodes":', ptc_json, ',"links":', link_json, '}' )
json
write.table(json,"profes.json")
cat(json)
write.table(cat(json),"profes.json")
write(json,"profes.json")
setwd("~/Dropbox/Quimica/Network_plot/Network_Analysis")
write(json,"profes.json")
shiny::runApp()
link_json
link_json
View(links)
View(links)
link_json <- toJSON(links, dataframe = "rows")
link_json
links <- as.data.frame(links)
colnames(links) <- c("source","target","sourcename","targetname","colabs")
link_json <- toJSON(links, dataframe = "rows")
link_json
json <- paste0('{"nodes":', ptc_json, ',"links":', link_json, '}' )
write(json,"profes.json")
runApp()
runApp()
